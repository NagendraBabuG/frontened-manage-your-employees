{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = void 0;\n\nfunction transformArguments() {\n  return ['MEMORY', 'STATS'];\n}\n\nexports.transformArguments = transformArguments;\nconst FIELDS_MAPPING = {\n  'peak.allocated': 'peakAllocated',\n  'total.allocated': 'totalAllocated',\n  'startup.allocated': 'startupAllocated',\n  'replication.backlog': 'replicationBacklog',\n  'clients.slaves': 'clientsReplicas',\n  'clients.normal': 'clientsNormal',\n  'aof.buffer': 'aofBuffer',\n  'lua.caches': 'luaCaches',\n  'overhead.total': 'overheadTotal',\n  'keys.count': 'keysCount',\n  'keys.bytes-per-key': 'keysBytesPerKey',\n  'dataset.bytes': 'datasetBytes',\n  'dataset.percentage': 'datasetPercentage',\n  'peak.percentage': 'peakPercentage',\n  'allocator.allocated': 'allocatorAllocated',\n  'allocator.active': 'allocatorActive',\n  'allocator.resident': 'allocatorResident',\n  'allocator-fragmentation.ratio': 'allocatorFragmentationRatio',\n  'allocator-fragmentation.bytes': 'allocatorFragmentationBytes',\n  'allocator-rss.ratio': 'allocatorRssRatio',\n  'allocator-rss.bytes': 'allocatorRssBytes',\n  'rss-overhead.ratio': 'rssOverheadRatio',\n  'rss-overhead.bytes': 'rssOverheadBytes',\n  'fragmentation': 'fragmentation',\n  'fragmentation.bytes': 'fragmentationBytes'\n},\n      DB_FIELDS_MAPPING = {\n  'overhead.hashtable.main': 'overheadHashtableMain',\n  'overhead.hashtable.expires': 'overheadHashtableExpires'\n};\n\nfunction transformReply(rawReply) {\n  const reply = {\n    db: {}\n  };\n\n  for (let i = 0; i < rawReply.length; i += 2) {\n    const key = rawReply[i];\n\n    if (key.startsWith('db.')) {\n      const dbTuples = rawReply[i + 1],\n            db = {};\n\n      for (let j = 0; j < dbTuples.length; j += 2) {\n        db[DB_FIELDS_MAPPING[dbTuples[j]]] = dbTuples[j + 1];\n      }\n\n      reply.db[key.substring(3)] = db;\n      continue;\n    }\n\n    reply[FIELDS_MAPPING[key]] = Number(rawReply[i + 1]);\n  }\n\n  return reply;\n}\n\nexports.transformReply = transformReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformReply","transformArguments","FIELDS_MAPPING","DB_FIELDS_MAPPING","rawReply","reply","db","i","length","key","startsWith","dbTuples","j","substring","Number"],"sources":["C:/Users/gnage/node_modules/@redis/client/dist/lib/commands/MEMORY_STATS.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = void 0;\nfunction transformArguments() {\n    return ['MEMORY', 'STATS'];\n}\nexports.transformArguments = transformArguments;\nconst FIELDS_MAPPING = {\n    'peak.allocated': 'peakAllocated',\n    'total.allocated': 'totalAllocated',\n    'startup.allocated': 'startupAllocated',\n    'replication.backlog': 'replicationBacklog',\n    'clients.slaves': 'clientsReplicas',\n    'clients.normal': 'clientsNormal',\n    'aof.buffer': 'aofBuffer',\n    'lua.caches': 'luaCaches',\n    'overhead.total': 'overheadTotal',\n    'keys.count': 'keysCount',\n    'keys.bytes-per-key': 'keysBytesPerKey',\n    'dataset.bytes': 'datasetBytes',\n    'dataset.percentage': 'datasetPercentage',\n    'peak.percentage': 'peakPercentage',\n    'allocator.allocated': 'allocatorAllocated',\n    'allocator.active': 'allocatorActive',\n    'allocator.resident': 'allocatorResident',\n    'allocator-fragmentation.ratio': 'allocatorFragmentationRatio',\n    'allocator-fragmentation.bytes': 'allocatorFragmentationBytes',\n    'allocator-rss.ratio': 'allocatorRssRatio',\n    'allocator-rss.bytes': 'allocatorRssBytes',\n    'rss-overhead.ratio': 'rssOverheadRatio',\n    'rss-overhead.bytes': 'rssOverheadBytes',\n    'fragmentation': 'fragmentation',\n    'fragmentation.bytes': 'fragmentationBytes'\n}, DB_FIELDS_MAPPING = {\n    'overhead.hashtable.main': 'overheadHashtableMain',\n    'overhead.hashtable.expires': 'overheadHashtableExpires'\n};\nfunction transformReply(rawReply) {\n    const reply = {\n        db: {}\n    };\n    for (let i = 0; i < rawReply.length; i += 2) {\n        const key = rawReply[i];\n        if (key.startsWith('db.')) {\n            const dbTuples = rawReply[i + 1], db = {};\n            for (let j = 0; j < dbTuples.length; j += 2) {\n                db[DB_FIELDS_MAPPING[dbTuples[j]]] = dbTuples[j + 1];\n            }\n            reply.db[key.substring(3)] = db;\n            continue;\n        }\n        reply[FIELDS_MAPPING[key]] = Number(rawReply[i + 1]);\n    }\n    return reply;\n}\nexports.transformReply = transformReply;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6B,KAAK,CAA3D;;AACA,SAASA,kBAAT,GAA8B;EAC1B,OAAO,CAAC,QAAD,EAAW,OAAX,CAAP;AACH;;AACDH,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;AACA,MAAMC,cAAc,GAAG;EACnB,kBAAkB,eADC;EAEnB,mBAAmB,gBAFA;EAGnB,qBAAqB,kBAHF;EAInB,uBAAuB,oBAJJ;EAKnB,kBAAkB,iBALC;EAMnB,kBAAkB,eANC;EAOnB,cAAc,WAPK;EAQnB,cAAc,WARK;EASnB,kBAAkB,eATC;EAUnB,cAAc,WAVK;EAWnB,sBAAsB,iBAXH;EAYnB,iBAAiB,cAZE;EAanB,sBAAsB,mBAbH;EAcnB,mBAAmB,gBAdA;EAenB,uBAAuB,oBAfJ;EAgBnB,oBAAoB,iBAhBD;EAiBnB,sBAAsB,mBAjBH;EAkBnB,iCAAiC,6BAlBd;EAmBnB,iCAAiC,6BAnBd;EAoBnB,uBAAuB,mBApBJ;EAqBnB,uBAAuB,mBArBJ;EAsBnB,sBAAsB,kBAtBH;EAuBnB,sBAAsB,kBAvBH;EAwBnB,iBAAiB,eAxBE;EAyBnB,uBAAuB;AAzBJ,CAAvB;AAAA,MA0BGC,iBAAiB,GAAG;EACnB,2BAA2B,uBADR;EAEnB,8BAA8B;AAFX,CA1BvB;;AA8BA,SAASH,cAAT,CAAwBI,QAAxB,EAAkC;EAC9B,MAAMC,KAAK,GAAG;IACVC,EAAE,EAAE;EADM,CAAd;;EAGA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,IAAI,CAA1C,EAA6C;IACzC,MAAME,GAAG,GAAGL,QAAQ,CAACG,CAAD,CAApB;;IACA,IAAIE,GAAG,CAACC,UAAJ,CAAe,KAAf,CAAJ,EAA2B;MACvB,MAAMC,QAAQ,GAAGP,QAAQ,CAACG,CAAC,GAAG,CAAL,CAAzB;MAAA,MAAkCD,EAAE,GAAG,EAAvC;;MACA,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACH,MAA7B,EAAqCI,CAAC,IAAI,CAA1C,EAA6C;QACzCN,EAAE,CAACH,iBAAiB,CAACQ,QAAQ,CAACC,CAAD,CAAT,CAAlB,CAAF,GAAqCD,QAAQ,CAACC,CAAC,GAAG,CAAL,CAA7C;MACH;;MACDP,KAAK,CAACC,EAAN,CAASG,GAAG,CAACI,SAAJ,CAAc,CAAd,CAAT,IAA6BP,EAA7B;MACA;IACH;;IACDD,KAAK,CAACH,cAAc,CAACO,GAAD,CAAf,CAAL,GAA6BK,MAAM,CAACV,QAAQ,CAACG,CAAC,GAAG,CAAL,CAAT,CAAnC;EACH;;EACD,OAAOF,KAAP;AACH;;AACDP,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}