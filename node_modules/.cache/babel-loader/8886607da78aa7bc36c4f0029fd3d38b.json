{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst commander_1 = require(\"./commander\");\n\nconst errors_1 = require(\"./errors\");\n\nclass RedisMultiCommand {\n  constructor() {\n    Object.defineProperty(this, \"queue\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"scriptsInUse\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Set()\n    });\n  }\n\n  static generateChainId() {\n    return Symbol('RedisMultiCommand Chain Id');\n  }\n\n  addCommand(args, transformReply) {\n    this.queue.push({\n      args,\n      transformReply\n    });\n  }\n\n  addFunction(name, fn, args) {\n    const transformedArguments = (0, commander_1.fCallArguments)(name, fn, fn.transformArguments(...args));\n    this.queue.push({\n      args: transformedArguments,\n      transformReply: fn.transformReply\n    });\n    return transformedArguments;\n  }\n\n  addScript(script, args) {\n    const transformedArguments = [];\n\n    if (this.scriptsInUse.has(script.SHA1)) {\n      transformedArguments.push('EVALSHA', script.SHA1);\n    } else {\n      this.scriptsInUse.add(script.SHA1);\n      transformedArguments.push('EVAL', script.SCRIPT);\n    }\n\n    if (script.NUMBER_OF_KEYS !== undefined) {\n      transformedArguments.push(script.NUMBER_OF_KEYS.toString());\n    }\n\n    const scriptArguments = script.transformArguments(...args);\n    transformedArguments.push(...scriptArguments);\n\n    if (scriptArguments.preserve) {\n      transformedArguments.preserve = scriptArguments.preserve;\n    }\n\n    this.addCommand(transformedArguments, script.transformReply);\n    return transformedArguments;\n  }\n\n  exec() {\n    if (!this.queue.length) {\n      return;\n    }\n\n    return [{\n      args: ['MULTI']\n    }, ...this.queue, {\n      args: ['EXEC']\n    }];\n  }\n\n  handleExecReplies(rawReplies) {\n    const execReply = rawReplies[rawReplies.length - 1];\n\n    if (execReply === null) {\n      throw new errors_1.WatchError();\n    }\n\n    return this.transformReplies(execReply);\n  }\n\n  transformReplies(rawReplies) {\n    return rawReplies.map((reply, i) => {\n      const {\n        transformReply,\n        args\n      } = this.queue[i];\n      return transformReply ? transformReply(reply, args.preserve) : reply;\n    });\n  }\n\n}\n\nexports.default = RedisMultiCommand;","map":{"version":3,"names":["Object","defineProperty","exports","value","commander_1","require","errors_1","RedisMultiCommand","constructor","enumerable","configurable","writable","Set","generateChainId","Symbol","addCommand","args","transformReply","queue","push","addFunction","name","fn","transformedArguments","fCallArguments","transformArguments","addScript","script","scriptsInUse","has","SHA1","add","SCRIPT","NUMBER_OF_KEYS","undefined","toString","scriptArguments","preserve","exec","length","handleExecReplies","rawReplies","execReply","WatchError","transformReplies","map","reply","i","default"],"sources":["C:/Users/gnage/node_modules/@redis/client/dist/lib/multi-command.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst commander_1 = require(\"./commander\");\nconst errors_1 = require(\"./errors\");\nclass RedisMultiCommand {\n    constructor() {\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"scriptsInUse\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Set()\n        });\n    }\n    static generateChainId() {\n        return Symbol('RedisMultiCommand Chain Id');\n    }\n    addCommand(args, transformReply) {\n        this.queue.push({\n            args,\n            transformReply\n        });\n    }\n    addFunction(name, fn, args) {\n        const transformedArguments = (0, commander_1.fCallArguments)(name, fn, fn.transformArguments(...args));\n        this.queue.push({\n            args: transformedArguments,\n            transformReply: fn.transformReply\n        });\n        return transformedArguments;\n    }\n    addScript(script, args) {\n        const transformedArguments = [];\n        if (this.scriptsInUse.has(script.SHA1)) {\n            transformedArguments.push('EVALSHA', script.SHA1);\n        }\n        else {\n            this.scriptsInUse.add(script.SHA1);\n            transformedArguments.push('EVAL', script.SCRIPT);\n        }\n        if (script.NUMBER_OF_KEYS !== undefined) {\n            transformedArguments.push(script.NUMBER_OF_KEYS.toString());\n        }\n        const scriptArguments = script.transformArguments(...args);\n        transformedArguments.push(...scriptArguments);\n        if (scriptArguments.preserve) {\n            transformedArguments.preserve = scriptArguments.preserve;\n        }\n        this.addCommand(transformedArguments, script.transformReply);\n        return transformedArguments;\n    }\n    exec() {\n        if (!this.queue.length) {\n            return;\n        }\n        return [\n            { args: ['MULTI'] },\n            ...this.queue,\n            { args: ['EXEC'] }\n        ];\n    }\n    handleExecReplies(rawReplies) {\n        const execReply = rawReplies[rawReplies.length - 1];\n        if (execReply === null) {\n            throw new errors_1.WatchError();\n        }\n        return this.transformReplies(execReply);\n    }\n    transformReplies(rawReplies) {\n        return rawReplies.map((reply, i) => {\n            const { transformReply, args } = this.queue[i];\n            return transformReply ? transformReply(reply, args.preserve) : reply;\n        });\n    }\n}\nexports.default = RedisMultiCommand;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}