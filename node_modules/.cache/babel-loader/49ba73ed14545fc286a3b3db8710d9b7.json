{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\n\nconst generic_transformers_1 = require(\"@redis/client/dist/lib/commands/generic-transformers\");\n\nconst _1 = require(\".\");\n\nexports.FIRST_KEY_INDEX = 1;\nexports.IS_READ_ONLY = true;\n\nfunction transformArguments(index, query, options) {\n  return (0, _1.pushSearchOptions)(['FT.SEARCH', index, query], options);\n}\n\nexports.transformArguments = transformArguments;\n\nfunction transformReply(reply) {\n  const documents = [];\n\n  for (let i = 1; i < reply.length; i += 2) {\n    const tuples = reply[i + 1];\n    documents.push({\n      id: reply[i],\n      value: tuples.length === 2 && tuples[0] === '$' ? JSON.parse(tuples[1]) : (0, generic_transformers_1.transformTuplesReply)(tuples)\n    });\n  }\n\n  return {\n    total: reply[0],\n    documents\n  };\n}\n\nexports.transformReply = transformReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformReply","transformArguments","IS_READ_ONLY","FIRST_KEY_INDEX","generic_transformers_1","require","_1","index","query","options","pushSearchOptions","reply","documents","i","length","tuples","push","id","JSON","parse","transformTuplesReply","total"],"sources":["C:/Users/gnage/node_modules/@redis/search/dist/commands/SEARCH.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nconst generic_transformers_1 = require(\"@redis/client/dist/lib/commands/generic-transformers\");\nconst _1 = require(\".\");\nexports.FIRST_KEY_INDEX = 1;\nexports.IS_READ_ONLY = true;\nfunction transformArguments(index, query, options) {\n    return (0, _1.pushSearchOptions)(['FT.SEARCH', index, query], options);\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n    const documents = [];\n    for (let i = 1; i < reply.length; i += 2) {\n        const tuples = reply[i + 1];\n        documents.push({\n            id: reply[i],\n            value: tuples.length === 2 && tuples[0] === '$' ?\n                JSON.parse(tuples[1]) :\n                (0, generic_transformers_1.transformTuplesReply)(tuples)\n        });\n    }\n    return {\n        total: reply[0],\n        documents\n    };\n}\nexports.transformReply = transformReply;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6BH,OAAO,CAACI,YAAR,GAAuBJ,OAAO,CAACK,eAAR,GAA0B,KAAK,CAA5G;;AACA,MAAMC,sBAAsB,GAAGC,OAAO,CAAC,sDAAD,CAAtC;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,GAAD,CAAlB;;AACAP,OAAO,CAACK,eAAR,GAA0B,CAA1B;AACAL,OAAO,CAACI,YAAR,GAAuB,IAAvB;;AACA,SAASD,kBAAT,CAA4BM,KAA5B,EAAmCC,KAAnC,EAA0CC,OAA1C,EAAmD;EAC/C,OAAO,CAAC,GAAGH,EAAE,CAACI,iBAAP,EAA0B,CAAC,WAAD,EAAcH,KAAd,EAAqBC,KAArB,CAA1B,EAAuDC,OAAvD,CAAP;AACH;;AACDX,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,cAAT,CAAwBW,KAAxB,EAA+B;EAC3B,MAAMC,SAAS,GAAG,EAAlB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;IACtC,MAAME,MAAM,GAAGJ,KAAK,CAACE,CAAC,GAAG,CAAL,CAApB;IACAD,SAAS,CAACI,IAAV,CAAe;MACXC,EAAE,EAAEN,KAAK,CAACE,CAAD,CADE;MAEXd,KAAK,EAAEgB,MAAM,CAACD,MAAP,KAAkB,CAAlB,IAAuBC,MAAM,CAAC,CAAD,CAAN,KAAc,GAArC,GACHG,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAAC,CAAD,CAAjB,CADG,GAEH,CAAC,GAAGX,sBAAsB,CAACgB,oBAA3B,EAAiDL,MAAjD;IAJO,CAAf;EAMH;;EACD,OAAO;IACHM,KAAK,EAAEV,KAAK,CAAC,CAAD,CADT;IAEHC;EAFG,CAAP;AAIH;;AACDd,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}