{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformMRangeWithLabelsReply = exports.transformMRangeReply = exports.transformRangeReply = exports.pushMRangeWithLabelsArguments = exports.pushWithLabelsArgument = exports.pushMRangeArguments = exports.pushFilterArgument = exports.pushMRangeGroupByArguments = exports.pushRangeArguments = exports.transformSampleReply = exports.transformIncrDecrArguments = exports.pushLabelsArgument = exports.transformLablesReply = exports.pushChunkSizeArgument = exports.pushEncodingArgument = exports.TimeSeriesEncoding = exports.pushRetentionArgument = exports.transformTimestampArgument = exports.TimeSeriesReducers = exports.TimeSeriesDuplicatePolicies = exports.TimeSeriesAggregationType = void 0;\n\nconst ADD = require(\"./ADD\");\n\nconst ALTER = require(\"./ALTER\");\n\nconst CREATE = require(\"./CREATE\");\n\nconst CREATERULE = require(\"./CREATERULE\");\n\nconst DECRBY = require(\"./DECRBY\");\n\nconst DEL = require(\"./DEL\");\n\nconst DELETERULE = require(\"./DELETERULE\");\n\nconst GET = require(\"./GET\");\n\nconst INCRBY = require(\"./INCRBY\");\n\nconst INFO_DEBUG = require(\"./INFO_DEBUG\");\n\nconst INFO = require(\"./INFO\");\n\nconst MADD = require(\"./MADD\");\n\nconst MGET = require(\"./MGET\");\n\nconst MGET_WITHLABELS = require(\"./MGET_WITHLABELS\");\n\nconst QUERYINDEX = require(\"./QUERYINDEX\");\n\nconst RANGE = require(\"./RANGE\");\n\nconst REVRANGE = require(\"./REVRANGE\");\n\nconst MRANGE = require(\"./MRANGE\");\n\nconst MRANGE_WITHLABELS = require(\"./MRANGE_WITHLABELS\");\n\nconst MREVRANGE = require(\"./MREVRANGE\");\n\nconst MREVRANGE_WITHLABELS = require(\"./MREVRANGE_WITHLABELS\");\n\nconst generic_transformers_1 = require(\"@redis/client/dist/lib/commands/generic-transformers\");\n\nexports.default = {\n  ADD,\n  add: ADD,\n  ALTER,\n  alter: ALTER,\n  CREATE,\n  create: CREATE,\n  CREATERULE,\n  createRule: CREATERULE,\n  DECRBY,\n  decrBy: DECRBY,\n  DEL,\n  del: DEL,\n  DELETERULE,\n  deleteRule: DELETERULE,\n  GET,\n  get: GET,\n  INCRBY,\n  incrBy: INCRBY,\n  INFO_DEBUG,\n  infoDebug: INFO_DEBUG,\n  INFO,\n  info: INFO,\n  MADD,\n  mAdd: MADD,\n  MGET,\n  mGet: MGET,\n  MGET_WITHLABELS,\n  mGetWithLabels: MGET_WITHLABELS,\n  QUERYINDEX,\n  queryIndex: QUERYINDEX,\n  RANGE,\n  range: RANGE,\n  REVRANGE,\n  revRange: REVRANGE,\n  MRANGE,\n  mRange: MRANGE,\n  MRANGE_WITHLABELS,\n  mRangeWithLabels: MRANGE_WITHLABELS,\n  MREVRANGE,\n  mRevRange: MREVRANGE,\n  MREVRANGE_WITHLABELS,\n  mRevRangeWithLabels: MREVRANGE_WITHLABELS\n};\nvar TimeSeriesAggregationType;\n\n(function (TimeSeriesAggregationType) {\n  TimeSeriesAggregationType[\"AVERAGE\"] = \"avg\";\n  TimeSeriesAggregationType[\"SUM\"] = \"sum\";\n  TimeSeriesAggregationType[\"MINIMUM\"] = \"min\";\n  TimeSeriesAggregationType[\"MAXIMUM\"] = \"max\";\n  TimeSeriesAggregationType[\"RANGE\"] = \"range\";\n  TimeSeriesAggregationType[\"COUNT\"] = \"count\";\n  TimeSeriesAggregationType[\"FIRST\"] = \"first\";\n  TimeSeriesAggregationType[\"LAST\"] = \"last\";\n  TimeSeriesAggregationType[\"STD_P\"] = \"std.p\";\n  TimeSeriesAggregationType[\"STD_S\"] = \"std.s\";\n  TimeSeriesAggregationType[\"VAR_P\"] = \"var.p\";\n  TimeSeriesAggregationType[\"VAR_S\"] = \"var.s\";\n})(TimeSeriesAggregationType = exports.TimeSeriesAggregationType || (exports.TimeSeriesAggregationType = {}));\n\nvar TimeSeriesDuplicatePolicies;\n\n(function (TimeSeriesDuplicatePolicies) {\n  TimeSeriesDuplicatePolicies[\"BLOCK\"] = \"BLOCK\";\n  TimeSeriesDuplicatePolicies[\"FIRST\"] = \"FIRST\";\n  TimeSeriesDuplicatePolicies[\"LAST\"] = \"LAST\";\n  TimeSeriesDuplicatePolicies[\"MIN\"] = \"MIN\";\n  TimeSeriesDuplicatePolicies[\"MAX\"] = \"MAX\";\n  TimeSeriesDuplicatePolicies[\"SUM\"] = \"SUM\";\n})(TimeSeriesDuplicatePolicies = exports.TimeSeriesDuplicatePolicies || (exports.TimeSeriesDuplicatePolicies = {}));\n\nvar TimeSeriesReducers;\n\n(function (TimeSeriesReducers) {\n  TimeSeriesReducers[\"SUM\"] = \"sum\";\n  TimeSeriesReducers[\"MINIMUM\"] = \"min\";\n  TimeSeriesReducers[\"MAXIMUM\"] = \"max\";\n})(TimeSeriesReducers = exports.TimeSeriesReducers || (exports.TimeSeriesReducers = {}));\n\nfunction transformTimestampArgument(timestamp) {\n  if (typeof timestamp === 'string') return timestamp;\n  return (typeof timestamp === 'number' ? timestamp : timestamp.getTime()).toString();\n}\n\nexports.transformTimestampArgument = transformTimestampArgument;\n\nfunction pushRetentionArgument(args, retention) {\n  if (retention) {\n    args.push('RETENTION', retention.toString());\n  }\n\n  return args;\n}\n\nexports.pushRetentionArgument = pushRetentionArgument;\nvar TimeSeriesEncoding;\n\n(function (TimeSeriesEncoding) {\n  TimeSeriesEncoding[\"COMPRESSED\"] = \"COMPRESSED\";\n  TimeSeriesEncoding[\"UNCOMPRESSED\"] = \"UNCOMPRESSED\";\n})(TimeSeriesEncoding = exports.TimeSeriesEncoding || (exports.TimeSeriesEncoding = {}));\n\nfunction pushEncodingArgument(args, encoding) {\n  if (encoding) {\n    args.push('ENCODING', encoding);\n  }\n\n  return args;\n}\n\nexports.pushEncodingArgument = pushEncodingArgument;\n\nfunction pushChunkSizeArgument(args, chunkSize) {\n  if (chunkSize) {\n    args.push('CHUNK_SIZE', chunkSize.toString());\n  }\n\n  return args;\n}\n\nexports.pushChunkSizeArgument = pushChunkSizeArgument;\n\nfunction transformLablesReply(reply) {\n  const labels = {};\n\n  for (const [key, value] of reply) {\n    labels[key] = value;\n  }\n\n  return labels;\n}\n\nexports.transformLablesReply = transformLablesReply;\n\nfunction pushLabelsArgument(args, labels) {\n  if (labels) {\n    args.push('LABELS');\n\n    for (const [label, value] of Object.entries(labels)) {\n      args.push(label, value);\n    }\n  }\n\n  return args;\n}\n\nexports.pushLabelsArgument = pushLabelsArgument;\n\nfunction transformIncrDecrArguments(command, key, value, options) {\n  const args = [command, key, value.toString()];\n\n  if (options?.TIMESTAMP !== undefined && options?.TIMESTAMP !== null) {\n    args.push('TIMESTAMP', transformTimestampArgument(options.TIMESTAMP));\n  }\n\n  pushRetentionArgument(args, options?.RETENTION);\n\n  if (options?.UNCOMPRESSED) {\n    args.push('UNCOMPRESSED');\n  }\n\n  pushChunkSizeArgument(args, options?.CHUNK_SIZE);\n  pushLabelsArgument(args, options?.LABELS);\n  return args;\n}\n\nexports.transformIncrDecrArguments = transformIncrDecrArguments;\n\nfunction transformSampleReply(reply) {\n  return {\n    timestamp: reply[0],\n    value: Number(reply[1])\n  };\n}\n\nexports.transformSampleReply = transformSampleReply;\n\nfunction pushRangeArguments(args, fromTimestamp, toTimestamp, options) {\n  args.push(transformTimestampArgument(fromTimestamp), transformTimestampArgument(toTimestamp));\n\n  if (options?.FILTER_BY_TS) {\n    args.push('FILTER_BY_TS');\n\n    for (const ts of options.FILTER_BY_TS) {\n      args.push(transformTimestampArgument(ts));\n    }\n  }\n\n  if (options?.FILTER_BY_VALUE) {\n    args.push('FILTER_BY_VALUE', options.FILTER_BY_VALUE.min.toString(), options.FILTER_BY_VALUE.max.toString());\n  }\n\n  if (options?.COUNT) {\n    args.push('COUNT', options.COUNT.toString());\n  }\n\n  if (options?.ALIGN) {\n    args.push('ALIGN', transformTimestampArgument(options.ALIGN));\n  }\n\n  if (options?.AGGREGATION) {\n    args.push('AGGREGATION', options.AGGREGATION.type, transformTimestampArgument(options.AGGREGATION.timeBucket));\n  }\n\n  return args;\n}\n\nexports.pushRangeArguments = pushRangeArguments;\n\nfunction pushMRangeGroupByArguments(args, groupBy) {\n  if (groupBy) {\n    args.push('GROUPBY', groupBy.label, 'REDUCE', groupBy.reducer);\n  }\n\n  return args;\n}\n\nexports.pushMRangeGroupByArguments = pushMRangeGroupByArguments;\n\nfunction pushFilterArgument(args, filter) {\n  args.push('FILTER');\n  (0, generic_transformers_1.pushVerdictArguments)(args, filter);\n  return args;\n}\n\nexports.pushFilterArgument = pushFilterArgument;\n\nfunction pushMRangeArguments(args, fromTimestamp, toTimestamp, filter, options) {\n  pushRangeArguments(args, fromTimestamp, toTimestamp, options);\n  pushFilterArgument(args, filter);\n  pushMRangeGroupByArguments(args, options?.GROUPBY);\n  return args;\n}\n\nexports.pushMRangeArguments = pushMRangeArguments;\n\nfunction pushWithLabelsArgument(args, selectedLabels) {\n  if (!selectedLabels) {\n    args.push('WITHLABELS');\n  } else {\n    args.push('SELECTED_LABELS');\n    (0, generic_transformers_1.pushVerdictArguments)(args, selectedLabels);\n  }\n\n  return args;\n}\n\nexports.pushWithLabelsArgument = pushWithLabelsArgument;\n\nfunction pushMRangeWithLabelsArguments(args, fromTimestamp, toTimestamp, filter, options) {\n  pushRangeArguments(args, fromTimestamp, toTimestamp, options);\n  pushWithLabelsArgument(args, options?.SELECTED_LABELS);\n  pushFilterArgument(args, filter);\n  pushMRangeGroupByArguments(args, options?.GROUPBY);\n  return args;\n}\n\nexports.pushMRangeWithLabelsArguments = pushMRangeWithLabelsArguments;\n\nfunction transformRangeReply(reply) {\n  return reply.map(transformSampleReply);\n}\n\nexports.transformRangeReply = transformRangeReply;\n\nfunction transformMRangeReply(reply) {\n  const args = [];\n\n  for (const [key, _, sample] of reply) {\n    args.push({\n      key,\n      samples: sample.map(transformSampleReply)\n    });\n  }\n\n  return args;\n}\n\nexports.transformMRangeReply = transformMRangeReply;\n\nfunction transformMRangeWithLabelsReply(reply) {\n  const args = [];\n\n  for (const [key, labels, samples] of reply) {\n    args.push({\n      key,\n      labels: transformLablesReply(labels),\n      samples: samples.map(transformSampleReply)\n    });\n  }\n\n  return args;\n}\n\nexports.transformMRangeWithLabelsReply = transformMRangeWithLabelsReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformMRangeWithLabelsReply","transformMRangeReply","transformRangeReply","pushMRangeWithLabelsArguments","pushWithLabelsArgument","pushMRangeArguments","pushFilterArgument","pushMRangeGroupByArguments","pushRangeArguments","transformSampleReply","transformIncrDecrArguments","pushLabelsArgument","transformLablesReply","pushChunkSizeArgument","pushEncodingArgument","TimeSeriesEncoding","pushRetentionArgument","transformTimestampArgument","TimeSeriesReducers","TimeSeriesDuplicatePolicies","TimeSeriesAggregationType","ADD","require","ALTER","CREATE","CREATERULE","DECRBY","DEL","DELETERULE","GET","INCRBY","INFO_DEBUG","INFO","MADD","MGET","MGET_WITHLABELS","QUERYINDEX","RANGE","REVRANGE","MRANGE","MRANGE_WITHLABELS","MREVRANGE","MREVRANGE_WITHLABELS","generic_transformers_1","default","add","alter","create","createRule","decrBy","del","deleteRule","get","incrBy","infoDebug","info","mAdd","mGet","mGetWithLabels","queryIndex","range","revRange","mRange","mRangeWithLabels","mRevRange","mRevRangeWithLabels","timestamp","getTime","toString","args","retention","push","encoding","chunkSize","reply","labels","key","label","entries","command","options","TIMESTAMP","undefined","RETENTION","UNCOMPRESSED","CHUNK_SIZE","LABELS","Number","fromTimestamp","toTimestamp","FILTER_BY_TS","ts","FILTER_BY_VALUE","min","max","COUNT","ALIGN","AGGREGATION","type","timeBucket","groupBy","reducer","filter","pushVerdictArguments","GROUPBY","selectedLabels","SELECTED_LABELS","map","_","sample","samples"],"sources":["C:/Users/gnage/node_modules/@redis/time-series/dist/commands/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformMRangeWithLabelsReply = exports.transformMRangeReply = exports.transformRangeReply = exports.pushMRangeWithLabelsArguments = exports.pushWithLabelsArgument = exports.pushMRangeArguments = exports.pushFilterArgument = exports.pushMRangeGroupByArguments = exports.pushRangeArguments = exports.transformSampleReply = exports.transformIncrDecrArguments = exports.pushLabelsArgument = exports.transformLablesReply = exports.pushChunkSizeArgument = exports.pushEncodingArgument = exports.TimeSeriesEncoding = exports.pushRetentionArgument = exports.transformTimestampArgument = exports.TimeSeriesReducers = exports.TimeSeriesDuplicatePolicies = exports.TimeSeriesAggregationType = void 0;\nconst ADD = require(\"./ADD\");\nconst ALTER = require(\"./ALTER\");\nconst CREATE = require(\"./CREATE\");\nconst CREATERULE = require(\"./CREATERULE\");\nconst DECRBY = require(\"./DECRBY\");\nconst DEL = require(\"./DEL\");\nconst DELETERULE = require(\"./DELETERULE\");\nconst GET = require(\"./GET\");\nconst INCRBY = require(\"./INCRBY\");\nconst INFO_DEBUG = require(\"./INFO_DEBUG\");\nconst INFO = require(\"./INFO\");\nconst MADD = require(\"./MADD\");\nconst MGET = require(\"./MGET\");\nconst MGET_WITHLABELS = require(\"./MGET_WITHLABELS\");\nconst QUERYINDEX = require(\"./QUERYINDEX\");\nconst RANGE = require(\"./RANGE\");\nconst REVRANGE = require(\"./REVRANGE\");\nconst MRANGE = require(\"./MRANGE\");\nconst MRANGE_WITHLABELS = require(\"./MRANGE_WITHLABELS\");\nconst MREVRANGE = require(\"./MREVRANGE\");\nconst MREVRANGE_WITHLABELS = require(\"./MREVRANGE_WITHLABELS\");\nconst generic_transformers_1 = require(\"@redis/client/dist/lib/commands/generic-transformers\");\nexports.default = {\n    ADD,\n    add: ADD,\n    ALTER,\n    alter: ALTER,\n    CREATE,\n    create: CREATE,\n    CREATERULE,\n    createRule: CREATERULE,\n    DECRBY,\n    decrBy: DECRBY,\n    DEL,\n    del: DEL,\n    DELETERULE,\n    deleteRule: DELETERULE,\n    GET,\n    get: GET,\n    INCRBY,\n    incrBy: INCRBY,\n    INFO_DEBUG,\n    infoDebug: INFO_DEBUG,\n    INFO,\n    info: INFO,\n    MADD,\n    mAdd: MADD,\n    MGET,\n    mGet: MGET,\n    MGET_WITHLABELS,\n    mGetWithLabels: MGET_WITHLABELS,\n    QUERYINDEX,\n    queryIndex: QUERYINDEX,\n    RANGE,\n    range: RANGE,\n    REVRANGE,\n    revRange: REVRANGE,\n    MRANGE,\n    mRange: MRANGE,\n    MRANGE_WITHLABELS,\n    mRangeWithLabels: MRANGE_WITHLABELS,\n    MREVRANGE,\n    mRevRange: MREVRANGE,\n    MREVRANGE_WITHLABELS,\n    mRevRangeWithLabels: MREVRANGE_WITHLABELS\n};\nvar TimeSeriesAggregationType;\n(function (TimeSeriesAggregationType) {\n    TimeSeriesAggregationType[\"AVERAGE\"] = \"avg\";\n    TimeSeriesAggregationType[\"SUM\"] = \"sum\";\n    TimeSeriesAggregationType[\"MINIMUM\"] = \"min\";\n    TimeSeriesAggregationType[\"MAXIMUM\"] = \"max\";\n    TimeSeriesAggregationType[\"RANGE\"] = \"range\";\n    TimeSeriesAggregationType[\"COUNT\"] = \"count\";\n    TimeSeriesAggregationType[\"FIRST\"] = \"first\";\n    TimeSeriesAggregationType[\"LAST\"] = \"last\";\n    TimeSeriesAggregationType[\"STD_P\"] = \"std.p\";\n    TimeSeriesAggregationType[\"STD_S\"] = \"std.s\";\n    TimeSeriesAggregationType[\"VAR_P\"] = \"var.p\";\n    TimeSeriesAggregationType[\"VAR_S\"] = \"var.s\";\n})(TimeSeriesAggregationType = exports.TimeSeriesAggregationType || (exports.TimeSeriesAggregationType = {}));\nvar TimeSeriesDuplicatePolicies;\n(function (TimeSeriesDuplicatePolicies) {\n    TimeSeriesDuplicatePolicies[\"BLOCK\"] = \"BLOCK\";\n    TimeSeriesDuplicatePolicies[\"FIRST\"] = \"FIRST\";\n    TimeSeriesDuplicatePolicies[\"LAST\"] = \"LAST\";\n    TimeSeriesDuplicatePolicies[\"MIN\"] = \"MIN\";\n    TimeSeriesDuplicatePolicies[\"MAX\"] = \"MAX\";\n    TimeSeriesDuplicatePolicies[\"SUM\"] = \"SUM\";\n})(TimeSeriesDuplicatePolicies = exports.TimeSeriesDuplicatePolicies || (exports.TimeSeriesDuplicatePolicies = {}));\nvar TimeSeriesReducers;\n(function (TimeSeriesReducers) {\n    TimeSeriesReducers[\"SUM\"] = \"sum\";\n    TimeSeriesReducers[\"MINIMUM\"] = \"min\";\n    TimeSeriesReducers[\"MAXIMUM\"] = \"max\";\n})(TimeSeriesReducers = exports.TimeSeriesReducers || (exports.TimeSeriesReducers = {}));\nfunction transformTimestampArgument(timestamp) {\n    if (typeof timestamp === 'string')\n        return timestamp;\n    return (typeof timestamp === 'number' ?\n        timestamp :\n        timestamp.getTime()).toString();\n}\nexports.transformTimestampArgument = transformTimestampArgument;\nfunction pushRetentionArgument(args, retention) {\n    if (retention) {\n        args.push('RETENTION', retention.toString());\n    }\n    return args;\n}\nexports.pushRetentionArgument = pushRetentionArgument;\nvar TimeSeriesEncoding;\n(function (TimeSeriesEncoding) {\n    TimeSeriesEncoding[\"COMPRESSED\"] = \"COMPRESSED\";\n    TimeSeriesEncoding[\"UNCOMPRESSED\"] = \"UNCOMPRESSED\";\n})(TimeSeriesEncoding = exports.TimeSeriesEncoding || (exports.TimeSeriesEncoding = {}));\nfunction pushEncodingArgument(args, encoding) {\n    if (encoding) {\n        args.push('ENCODING', encoding);\n    }\n    return args;\n}\nexports.pushEncodingArgument = pushEncodingArgument;\nfunction pushChunkSizeArgument(args, chunkSize) {\n    if (chunkSize) {\n        args.push('CHUNK_SIZE', chunkSize.toString());\n    }\n    return args;\n}\nexports.pushChunkSizeArgument = pushChunkSizeArgument;\nfunction transformLablesReply(reply) {\n    const labels = {};\n    for (const [key, value] of reply) {\n        labels[key] = value;\n    }\n    return labels;\n}\nexports.transformLablesReply = transformLablesReply;\nfunction pushLabelsArgument(args, labels) {\n    if (labels) {\n        args.push('LABELS');\n        for (const [label, value] of Object.entries(labels)) {\n            args.push(label, value);\n        }\n    }\n    return args;\n}\nexports.pushLabelsArgument = pushLabelsArgument;\nfunction transformIncrDecrArguments(command, key, value, options) {\n    const args = [\n        command,\n        key,\n        value.toString()\n    ];\n    if (options?.TIMESTAMP !== undefined && options?.TIMESTAMP !== null) {\n        args.push('TIMESTAMP', transformTimestampArgument(options.TIMESTAMP));\n    }\n    pushRetentionArgument(args, options?.RETENTION);\n    if (options?.UNCOMPRESSED) {\n        args.push('UNCOMPRESSED');\n    }\n    pushChunkSizeArgument(args, options?.CHUNK_SIZE);\n    pushLabelsArgument(args, options?.LABELS);\n    return args;\n}\nexports.transformIncrDecrArguments = transformIncrDecrArguments;\nfunction transformSampleReply(reply) {\n    return {\n        timestamp: reply[0],\n        value: Number(reply[1])\n    };\n}\nexports.transformSampleReply = transformSampleReply;\nfunction pushRangeArguments(args, fromTimestamp, toTimestamp, options) {\n    args.push(transformTimestampArgument(fromTimestamp), transformTimestampArgument(toTimestamp));\n    if (options?.FILTER_BY_TS) {\n        args.push('FILTER_BY_TS');\n        for (const ts of options.FILTER_BY_TS) {\n            args.push(transformTimestampArgument(ts));\n        }\n    }\n    if (options?.FILTER_BY_VALUE) {\n        args.push('FILTER_BY_VALUE', options.FILTER_BY_VALUE.min.toString(), options.FILTER_BY_VALUE.max.toString());\n    }\n    if (options?.COUNT) {\n        args.push('COUNT', options.COUNT.toString());\n    }\n    if (options?.ALIGN) {\n        args.push('ALIGN', transformTimestampArgument(options.ALIGN));\n    }\n    if (options?.AGGREGATION) {\n        args.push('AGGREGATION', options.AGGREGATION.type, transformTimestampArgument(options.AGGREGATION.timeBucket));\n    }\n    return args;\n}\nexports.pushRangeArguments = pushRangeArguments;\nfunction pushMRangeGroupByArguments(args, groupBy) {\n    if (groupBy) {\n        args.push('GROUPBY', groupBy.label, 'REDUCE', groupBy.reducer);\n    }\n    return args;\n}\nexports.pushMRangeGroupByArguments = pushMRangeGroupByArguments;\nfunction pushFilterArgument(args, filter) {\n    args.push('FILTER');\n    (0, generic_transformers_1.pushVerdictArguments)(args, filter);\n    return args;\n}\nexports.pushFilterArgument = pushFilterArgument;\nfunction pushMRangeArguments(args, fromTimestamp, toTimestamp, filter, options) {\n    pushRangeArguments(args, fromTimestamp, toTimestamp, options);\n    pushFilterArgument(args, filter);\n    pushMRangeGroupByArguments(args, options?.GROUPBY);\n    return args;\n}\nexports.pushMRangeArguments = pushMRangeArguments;\nfunction pushWithLabelsArgument(args, selectedLabels) {\n    if (!selectedLabels) {\n        args.push('WITHLABELS');\n    }\n    else {\n        args.push('SELECTED_LABELS');\n        (0, generic_transformers_1.pushVerdictArguments)(args, selectedLabels);\n    }\n    return args;\n}\nexports.pushWithLabelsArgument = pushWithLabelsArgument;\nfunction pushMRangeWithLabelsArguments(args, fromTimestamp, toTimestamp, filter, options) {\n    pushRangeArguments(args, fromTimestamp, toTimestamp, options);\n    pushWithLabelsArgument(args, options?.SELECTED_LABELS);\n    pushFilterArgument(args, filter);\n    pushMRangeGroupByArguments(args, options?.GROUPBY);\n    return args;\n}\nexports.pushMRangeWithLabelsArguments = pushMRangeWithLabelsArguments;\nfunction transformRangeReply(reply) {\n    return reply.map(transformSampleReply);\n}\nexports.transformRangeReply = transformRangeReply;\nfunction transformMRangeReply(reply) {\n    const args = [];\n    for (const [key, _, sample] of reply) {\n        args.push({\n            key,\n            samples: sample.map(transformSampleReply)\n        });\n    }\n    return args;\n}\nexports.transformMRangeReply = transformMRangeReply;\nfunction transformMRangeWithLabelsReply(reply) {\n    const args = [];\n    for (const [key, labels, samples] of reply) {\n        args.push({\n            key,\n            labels: transformLablesReply(labels),\n            samples: samples.map(transformSampleReply)\n        });\n    }\n    return args;\n}\nexports.transformMRangeWithLabelsReply = transformMRangeWithLabelsReply;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,8BAAR,GAAyCF,OAAO,CAACG,oBAAR,GAA+BH,OAAO,CAACI,mBAAR,GAA8BJ,OAAO,CAACK,6BAAR,GAAwCL,OAAO,CAACM,sBAAR,GAAiCN,OAAO,CAACO,mBAAR,GAA8BP,OAAO,CAACQ,kBAAR,GAA6BR,OAAO,CAACS,0BAAR,GAAqCT,OAAO,CAACU,kBAAR,GAA6BV,OAAO,CAACW,oBAAR,GAA+BX,OAAO,CAACY,0BAAR,GAAqCZ,OAAO,CAACa,kBAAR,GAA6Bb,OAAO,CAACc,oBAAR,GAA+Bd,OAAO,CAACe,qBAAR,GAAgCf,OAAO,CAACgB,oBAAR,GAA+BhB,OAAO,CAACiB,kBAAR,GAA6BjB,OAAO,CAACkB,qBAAR,GAAgClB,OAAO,CAACmB,0BAAR,GAAqCnB,OAAO,CAACoB,kBAAR,GAA6BpB,OAAO,CAACqB,2BAAR,GAAsCrB,OAAO,CAACsB,yBAAR,GAAoC,KAAK,CAAzrB;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMK,GAAG,GAAGL,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAMM,UAAU,GAAGN,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMO,GAAG,GAAGP,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMS,UAAU,GAAGT,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMU,IAAI,GAAGV,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMW,IAAI,GAAGX,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMY,IAAI,GAAGZ,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMa,eAAe,GAAGb,OAAO,CAAC,mBAAD,CAA/B;;AACA,MAAMc,UAAU,GAAGd,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMe,KAAK,GAAGf,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMgB,QAAQ,GAAGhB,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMiB,MAAM,GAAGjB,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMkB,iBAAiB,GAAGlB,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAMmB,SAAS,GAAGnB,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMoB,oBAAoB,GAAGpB,OAAO,CAAC,wBAAD,CAApC;;AACA,MAAMqB,sBAAsB,GAAGrB,OAAO,CAAC,sDAAD,CAAtC;;AACAxB,OAAO,CAAC8C,OAAR,GAAkB;EACdvB,GADc;EAEdwB,GAAG,EAAExB,GAFS;EAGdE,KAHc;EAIduB,KAAK,EAAEvB,KAJO;EAKdC,MALc;EAMduB,MAAM,EAAEvB,MANM;EAOdC,UAPc;EAQduB,UAAU,EAAEvB,UARE;EASdC,MATc;EAUduB,MAAM,EAAEvB,MAVM;EAWdC,GAXc;EAYduB,GAAG,EAAEvB,GAZS;EAadC,UAbc;EAcduB,UAAU,EAAEvB,UAdE;EAedC,GAfc;EAgBduB,GAAG,EAAEvB,GAhBS;EAiBdC,MAjBc;EAkBduB,MAAM,EAAEvB,MAlBM;EAmBdC,UAnBc;EAoBduB,SAAS,EAAEvB,UApBG;EAqBdC,IArBc;EAsBduB,IAAI,EAAEvB,IAtBQ;EAuBdC,IAvBc;EAwBduB,IAAI,EAAEvB,IAxBQ;EAyBdC,IAzBc;EA0BduB,IAAI,EAAEvB,IA1BQ;EA2BdC,eA3Bc;EA4BduB,cAAc,EAAEvB,eA5BF;EA6BdC,UA7Bc;EA8BduB,UAAU,EAAEvB,UA9BE;EA+BdC,KA/Bc;EAgCduB,KAAK,EAAEvB,KAhCO;EAiCdC,QAjCc;EAkCduB,QAAQ,EAAEvB,QAlCI;EAmCdC,MAnCc;EAoCduB,MAAM,EAAEvB,MApCM;EAqCdC,iBArCc;EAsCduB,gBAAgB,EAAEvB,iBAtCJ;EAuCdC,SAvCc;EAwCduB,SAAS,EAAEvB,SAxCG;EAyCdC,oBAzCc;EA0CduB,mBAAmB,EAAEvB;AA1CP,CAAlB;AA4CA,IAAItB,yBAAJ;;AACA,CAAC,UAAUA,yBAAV,EAAqC;EAClCA,yBAAyB,CAAC,SAAD,CAAzB,GAAuC,KAAvC;EACAA,yBAAyB,CAAC,KAAD,CAAzB,GAAmC,KAAnC;EACAA,yBAAyB,CAAC,SAAD,CAAzB,GAAuC,KAAvC;EACAA,yBAAyB,CAAC,SAAD,CAAzB,GAAuC,KAAvC;EACAA,yBAAyB,CAAC,OAAD,CAAzB,GAAqC,OAArC;EACAA,yBAAyB,CAAC,OAAD,CAAzB,GAAqC,OAArC;EACAA,yBAAyB,CAAC,OAAD,CAAzB,GAAqC,OAArC;EACAA,yBAAyB,CAAC,MAAD,CAAzB,GAAoC,MAApC;EACAA,yBAAyB,CAAC,OAAD,CAAzB,GAAqC,OAArC;EACAA,yBAAyB,CAAC,OAAD,CAAzB,GAAqC,OAArC;EACAA,yBAAyB,CAAC,OAAD,CAAzB,GAAqC,OAArC;EACAA,yBAAyB,CAAC,OAAD,CAAzB,GAAqC,OAArC;AACH,CAbD,EAaGA,yBAAyB,GAAGtB,OAAO,CAACsB,yBAAR,KAAsCtB,OAAO,CAACsB,yBAAR,GAAoC,EAA1E,CAb/B;;AAcA,IAAID,2BAAJ;;AACA,CAAC,UAAUA,2BAAV,EAAuC;EACpCA,2BAA2B,CAAC,OAAD,CAA3B,GAAuC,OAAvC;EACAA,2BAA2B,CAAC,OAAD,CAA3B,GAAuC,OAAvC;EACAA,2BAA2B,CAAC,MAAD,CAA3B,GAAsC,MAAtC;EACAA,2BAA2B,CAAC,KAAD,CAA3B,GAAqC,KAArC;EACAA,2BAA2B,CAAC,KAAD,CAA3B,GAAqC,KAArC;EACAA,2BAA2B,CAAC,KAAD,CAA3B,GAAqC,KAArC;AACH,CAPD,EAOGA,2BAA2B,GAAGrB,OAAO,CAACqB,2BAAR,KAAwCrB,OAAO,CAACqB,2BAAR,GAAsC,EAA9E,CAPjC;;AAQA,IAAID,kBAAJ;;AACA,CAAC,UAAUA,kBAAV,EAA8B;EAC3BA,kBAAkB,CAAC,KAAD,CAAlB,GAA4B,KAA5B;EACAA,kBAAkB,CAAC,SAAD,CAAlB,GAAgC,KAAhC;EACAA,kBAAkB,CAAC,SAAD,CAAlB,GAAgC,KAAhC;AACH,CAJD,EAIGA,kBAAkB,GAAGpB,OAAO,CAACoB,kBAAR,KAA+BpB,OAAO,CAACoB,kBAAR,GAA6B,EAA5D,CAJxB;;AAKA,SAASD,0BAAT,CAAoCiD,SAApC,EAA+C;EAC3C,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EACI,OAAOA,SAAP;EACJ,OAAO,CAAC,OAAOA,SAAP,KAAqB,QAArB,GACJA,SADI,GAEJA,SAAS,CAACC,OAAV,EAFG,EAEkBC,QAFlB,EAAP;AAGH;;AACDtE,OAAO,CAACmB,0BAAR,GAAqCA,0BAArC;;AACA,SAASD,qBAAT,CAA+BqD,IAA/B,EAAqCC,SAArC,EAAgD;EAC5C,IAAIA,SAAJ,EAAe;IACXD,IAAI,CAACE,IAAL,CAAU,WAAV,EAAuBD,SAAS,CAACF,QAAV,EAAvB;EACH;;EACD,OAAOC,IAAP;AACH;;AACDvE,OAAO,CAACkB,qBAAR,GAAgCA,qBAAhC;AACA,IAAID,kBAAJ;;AACA,CAAC,UAAUA,kBAAV,EAA8B;EAC3BA,kBAAkB,CAAC,YAAD,CAAlB,GAAmC,YAAnC;EACAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqC,cAArC;AACH,CAHD,EAGGA,kBAAkB,GAAGjB,OAAO,CAACiB,kBAAR,KAA+BjB,OAAO,CAACiB,kBAAR,GAA6B,EAA5D,CAHxB;;AAIA,SAASD,oBAAT,CAA8BuD,IAA9B,EAAoCG,QAApC,EAA8C;EAC1C,IAAIA,QAAJ,EAAc;IACVH,IAAI,CAACE,IAAL,CAAU,UAAV,EAAsBC,QAAtB;EACH;;EACD,OAAOH,IAAP;AACH;;AACDvE,OAAO,CAACgB,oBAAR,GAA+BA,oBAA/B;;AACA,SAASD,qBAAT,CAA+BwD,IAA/B,EAAqCI,SAArC,EAAgD;EAC5C,IAAIA,SAAJ,EAAe;IACXJ,IAAI,CAACE,IAAL,CAAU,YAAV,EAAwBE,SAAS,CAACL,QAAV,EAAxB;EACH;;EACD,OAAOC,IAAP;AACH;;AACDvE,OAAO,CAACe,qBAAR,GAAgCA,qBAAhC;;AACA,SAASD,oBAAT,CAA8B8D,KAA9B,EAAqC;EACjC,MAAMC,MAAM,GAAG,EAAf;;EACA,KAAK,MAAM,CAACC,GAAD,EAAM7E,KAAN,CAAX,IAA2B2E,KAA3B,EAAkC;IAC9BC,MAAM,CAACC,GAAD,CAAN,GAAc7E,KAAd;EACH;;EACD,OAAO4E,MAAP;AACH;;AACD7E,OAAO,CAACc,oBAAR,GAA+BA,oBAA/B;;AACA,SAASD,kBAAT,CAA4B0D,IAA5B,EAAkCM,MAAlC,EAA0C;EACtC,IAAIA,MAAJ,EAAY;IACRN,IAAI,CAACE,IAAL,CAAU,QAAV;;IACA,KAAK,MAAM,CAACM,KAAD,EAAQ9E,KAAR,CAAX,IAA6BH,MAAM,CAACkF,OAAP,CAAeH,MAAf,CAA7B,EAAqD;MACjDN,IAAI,CAACE,IAAL,CAAUM,KAAV,EAAiB9E,KAAjB;IACH;EACJ;;EACD,OAAOsE,IAAP;AACH;;AACDvE,OAAO,CAACa,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,0BAAT,CAAoCqE,OAApC,EAA6CH,GAA7C,EAAkD7E,KAAlD,EAAyDiF,OAAzD,EAAkE;EAC9D,MAAMX,IAAI,GAAG,CACTU,OADS,EAETH,GAFS,EAGT7E,KAAK,CAACqE,QAAN,EAHS,CAAb;;EAKA,IAAIY,OAAO,EAAEC,SAAT,KAAuBC,SAAvB,IAAoCF,OAAO,EAAEC,SAAT,KAAuB,IAA/D,EAAqE;IACjEZ,IAAI,CAACE,IAAL,CAAU,WAAV,EAAuBtD,0BAA0B,CAAC+D,OAAO,CAACC,SAAT,CAAjD;EACH;;EACDjE,qBAAqB,CAACqD,IAAD,EAAOW,OAAO,EAAEG,SAAhB,CAArB;;EACA,IAAIH,OAAO,EAAEI,YAAb,EAA2B;IACvBf,IAAI,CAACE,IAAL,CAAU,cAAV;EACH;;EACD1D,qBAAqB,CAACwD,IAAD,EAAOW,OAAO,EAAEK,UAAhB,CAArB;EACA1E,kBAAkB,CAAC0D,IAAD,EAAOW,OAAO,EAAEM,MAAhB,CAAlB;EACA,OAAOjB,IAAP;AACH;;AACDvE,OAAO,CAACY,0BAAR,GAAqCA,0BAArC;;AACA,SAASD,oBAAT,CAA8BiE,KAA9B,EAAqC;EACjC,OAAO;IACHR,SAAS,EAAEQ,KAAK,CAAC,CAAD,CADb;IAEH3E,KAAK,EAAEwF,MAAM,CAACb,KAAK,CAAC,CAAD,CAAN;EAFV,CAAP;AAIH;;AACD5E,OAAO,CAACW,oBAAR,GAA+BA,oBAA/B;;AACA,SAASD,kBAAT,CAA4B6D,IAA5B,EAAkCmB,aAAlC,EAAiDC,WAAjD,EAA8DT,OAA9D,EAAuE;EACnEX,IAAI,CAACE,IAAL,CAAUtD,0BAA0B,CAACuE,aAAD,CAApC,EAAqDvE,0BAA0B,CAACwE,WAAD,CAA/E;;EACA,IAAIT,OAAO,EAAEU,YAAb,EAA2B;IACvBrB,IAAI,CAACE,IAAL,CAAU,cAAV;;IACA,KAAK,MAAMoB,EAAX,IAAiBX,OAAO,CAACU,YAAzB,EAAuC;MACnCrB,IAAI,CAACE,IAAL,CAAUtD,0BAA0B,CAAC0E,EAAD,CAApC;IACH;EACJ;;EACD,IAAIX,OAAO,EAAEY,eAAb,EAA8B;IAC1BvB,IAAI,CAACE,IAAL,CAAU,iBAAV,EAA6BS,OAAO,CAACY,eAAR,CAAwBC,GAAxB,CAA4BzB,QAA5B,EAA7B,EAAqEY,OAAO,CAACY,eAAR,CAAwBE,GAAxB,CAA4B1B,QAA5B,EAArE;EACH;;EACD,IAAIY,OAAO,EAAEe,KAAb,EAAoB;IAChB1B,IAAI,CAACE,IAAL,CAAU,OAAV,EAAmBS,OAAO,CAACe,KAAR,CAAc3B,QAAd,EAAnB;EACH;;EACD,IAAIY,OAAO,EAAEgB,KAAb,EAAoB;IAChB3B,IAAI,CAACE,IAAL,CAAU,OAAV,EAAmBtD,0BAA0B,CAAC+D,OAAO,CAACgB,KAAT,CAA7C;EACH;;EACD,IAAIhB,OAAO,EAAEiB,WAAb,EAA0B;IACtB5B,IAAI,CAACE,IAAL,CAAU,aAAV,EAAyBS,OAAO,CAACiB,WAAR,CAAoBC,IAA7C,EAAmDjF,0BAA0B,CAAC+D,OAAO,CAACiB,WAAR,CAAoBE,UAArB,CAA7E;EACH;;EACD,OAAO9B,IAAP;AACH;;AACDvE,OAAO,CAACU,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,0BAAT,CAAoC8D,IAApC,EAA0C+B,OAA1C,EAAmD;EAC/C,IAAIA,OAAJ,EAAa;IACT/B,IAAI,CAACE,IAAL,CAAU,SAAV,EAAqB6B,OAAO,CAACvB,KAA7B,EAAoC,QAApC,EAA8CuB,OAAO,CAACC,OAAtD;EACH;;EACD,OAAOhC,IAAP;AACH;;AACDvE,OAAO,CAACS,0BAAR,GAAqCA,0BAArC;;AACA,SAASD,kBAAT,CAA4B+D,IAA5B,EAAkCiC,MAAlC,EAA0C;EACtCjC,IAAI,CAACE,IAAL,CAAU,QAAV;EACA,CAAC,GAAG5B,sBAAsB,CAAC4D,oBAA3B,EAAiDlC,IAAjD,EAAuDiC,MAAvD;EACA,OAAOjC,IAAP;AACH;;AACDvE,OAAO,CAACQ,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,mBAAT,CAA6BgE,IAA7B,EAAmCmB,aAAnC,EAAkDC,WAAlD,EAA+Da,MAA/D,EAAuEtB,OAAvE,EAAgF;EAC5ExE,kBAAkB,CAAC6D,IAAD,EAAOmB,aAAP,EAAsBC,WAAtB,EAAmCT,OAAnC,CAAlB;EACA1E,kBAAkB,CAAC+D,IAAD,EAAOiC,MAAP,CAAlB;EACA/F,0BAA0B,CAAC8D,IAAD,EAAOW,OAAO,EAAEwB,OAAhB,CAA1B;EACA,OAAOnC,IAAP;AACH;;AACDvE,OAAO,CAACO,mBAAR,GAA8BA,mBAA9B;;AACA,SAASD,sBAAT,CAAgCiE,IAAhC,EAAsCoC,cAAtC,EAAsD;EAClD,IAAI,CAACA,cAAL,EAAqB;IACjBpC,IAAI,CAACE,IAAL,CAAU,YAAV;EACH,CAFD,MAGK;IACDF,IAAI,CAACE,IAAL,CAAU,iBAAV;IACA,CAAC,GAAG5B,sBAAsB,CAAC4D,oBAA3B,EAAiDlC,IAAjD,EAAuDoC,cAAvD;EACH;;EACD,OAAOpC,IAAP;AACH;;AACDvE,OAAO,CAACM,sBAAR,GAAiCA,sBAAjC;;AACA,SAASD,6BAAT,CAAuCkE,IAAvC,EAA6CmB,aAA7C,EAA4DC,WAA5D,EAAyEa,MAAzE,EAAiFtB,OAAjF,EAA0F;EACtFxE,kBAAkB,CAAC6D,IAAD,EAAOmB,aAAP,EAAsBC,WAAtB,EAAmCT,OAAnC,CAAlB;EACA5E,sBAAsB,CAACiE,IAAD,EAAOW,OAAO,EAAE0B,eAAhB,CAAtB;EACApG,kBAAkB,CAAC+D,IAAD,EAAOiC,MAAP,CAAlB;EACA/F,0BAA0B,CAAC8D,IAAD,EAAOW,OAAO,EAAEwB,OAAhB,CAA1B;EACA,OAAOnC,IAAP;AACH;;AACDvE,OAAO,CAACK,6BAAR,GAAwCA,6BAAxC;;AACA,SAASD,mBAAT,CAA6BwE,KAA7B,EAAoC;EAChC,OAAOA,KAAK,CAACiC,GAAN,CAAUlG,oBAAV,CAAP;AACH;;AACDX,OAAO,CAACI,mBAAR,GAA8BA,mBAA9B;;AACA,SAASD,oBAAT,CAA8ByE,KAA9B,EAAqC;EACjC,MAAML,IAAI,GAAG,EAAb;;EACA,KAAK,MAAM,CAACO,GAAD,EAAMgC,CAAN,EAASC,MAAT,CAAX,IAA+BnC,KAA/B,EAAsC;IAClCL,IAAI,CAACE,IAAL,CAAU;MACNK,GADM;MAENkC,OAAO,EAAED,MAAM,CAACF,GAAP,CAAWlG,oBAAX;IAFH,CAAV;EAIH;;EACD,OAAO4D,IAAP;AACH;;AACDvE,OAAO,CAACG,oBAAR,GAA+BA,oBAA/B;;AACA,SAASD,8BAAT,CAAwC0E,KAAxC,EAA+C;EAC3C,MAAML,IAAI,GAAG,EAAb;;EACA,KAAK,MAAM,CAACO,GAAD,EAAMD,MAAN,EAAcmC,OAAd,CAAX,IAAqCpC,KAArC,EAA4C;IACxCL,IAAI,CAACE,IAAL,CAAU;MACNK,GADM;MAEND,MAAM,EAAE/D,oBAAoB,CAAC+D,MAAD,CAFtB;MAGNmC,OAAO,EAAEA,OAAO,CAACH,GAAR,CAAYlG,oBAAZ;IAHH,CAAV;EAKH;;EACD,OAAO4D,IAAP;AACH;;AACDvE,OAAO,CAACE,8BAAR,GAAyCA,8BAAzC"},"metadata":{},"sourceType":"script"}