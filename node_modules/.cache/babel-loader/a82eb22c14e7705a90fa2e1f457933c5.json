{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\n\nconst AGGREGATE_1 = require(\"./AGGREGATE\");\n\nvar AGGREGATE_2 = require(\"./AGGREGATE\");\n\nObject.defineProperty(exports, \"FIRST_KEY_INDEX\", {\n  enumerable: true,\n  get: function () {\n    return AGGREGATE_2.FIRST_KEY_INDEX;\n  }\n});\nObject.defineProperty(exports, \"IS_READ_ONLY\", {\n  enumerable: true,\n  get: function () {\n    return AGGREGATE_2.IS_READ_ONLY;\n  }\n});\n\nfunction transformArguments(index, query, options) {\n  const args = (0, AGGREGATE_1.transformArguments)(index, query, options);\n  args.push('WITHCURSOR');\n\n  if (options?.COUNT) {\n    args.push('COUNT', options.COUNT.toString());\n  }\n\n  return args;\n}\n\nexports.transformArguments = transformArguments;\n\nfunction transformReply(reply) {\n  return { ...(0, AGGREGATE_1.transformReply)(reply[0]),\n    cursor: reply[1]\n  };\n}\n\nexports.transformReply = transformReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformReply","transformArguments","IS_READ_ONLY","FIRST_KEY_INDEX","AGGREGATE_1","require","AGGREGATE_2","enumerable","get","index","query","options","args","push","COUNT","toString","reply","cursor"],"sources":["C:/Users/gnage/node_modules/@redis/search/dist/commands/AGGREGATE_WITHCURSOR.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nconst AGGREGATE_1 = require(\"./AGGREGATE\");\nvar AGGREGATE_2 = require(\"./AGGREGATE\");\nObject.defineProperty(exports, \"FIRST_KEY_INDEX\", { enumerable: true, get: function () { return AGGREGATE_2.FIRST_KEY_INDEX; } });\nObject.defineProperty(exports, \"IS_READ_ONLY\", { enumerable: true, get: function () { return AGGREGATE_2.IS_READ_ONLY; } });\nfunction transformArguments(index, query, options) {\n    const args = (0, AGGREGATE_1.transformArguments)(index, query, options);\n    args.push('WITHCURSOR');\n    if (options?.COUNT) {\n        args.push('COUNT', options.COUNT.toString());\n    }\n    return args;\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n    return {\n        ...(0, AGGREGATE_1.transformReply)(reply[0]),\n        cursor: reply[1]\n    };\n}\nexports.transformReply = transformReply;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6BH,OAAO,CAACI,YAAR,GAAuBJ,OAAO,CAACK,eAAR,GAA0B,KAAK,CAA5G;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACAT,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,iBAA/B,EAAkD;EAAES,UAAU,EAAE,IAAd;EAAoBC,GAAG,EAAE,YAAY;IAAE,OAAOF,WAAW,CAACH,eAAnB;EAAqC;AAA5E,CAAlD;AACAP,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,cAA/B,EAA+C;EAAES,UAAU,EAAE,IAAd;EAAoBC,GAAG,EAAE,YAAY;IAAE,OAAOF,WAAW,CAACJ,YAAnB;EAAkC;AAAzE,CAA/C;;AACA,SAASD,kBAAT,CAA4BQ,KAA5B,EAAmCC,KAAnC,EAA0CC,OAA1C,EAAmD;EAC/C,MAAMC,IAAI,GAAG,CAAC,GAAGR,WAAW,CAACH,kBAAhB,EAAoCQ,KAApC,EAA2CC,KAA3C,EAAkDC,OAAlD,CAAb;EACAC,IAAI,CAACC,IAAL,CAAU,YAAV;;EACA,IAAIF,OAAO,EAAEG,KAAb,EAAoB;IAChBF,IAAI,CAACC,IAAL,CAAU,OAAV,EAAmBF,OAAO,CAACG,KAAR,CAAcC,QAAd,EAAnB;EACH;;EACD,OAAOH,IAAP;AACH;;AACDd,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,cAAT,CAAwBgB,KAAxB,EAA+B;EAC3B,OAAO,EACH,GAAG,CAAC,GAAGZ,WAAW,CAACJ,cAAhB,EAAgCgB,KAAK,CAAC,CAAD,CAArC,CADA;IAEHC,MAAM,EAAED,KAAK,CAAC,CAAD;EAFV,CAAP;AAIH;;AACDlB,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}