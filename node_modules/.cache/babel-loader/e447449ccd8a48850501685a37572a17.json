{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = void 0;\n\nfunction transformArguments(index, query, options) {\n  const args = ['FT.SPELLCHECK', index, query];\n\n  if (options?.DISTANCE) {\n    args.push('DISTANCE', options.DISTANCE.toString());\n  }\n\n  if (options?.TERMS) {\n    if (Array.isArray(options.TERMS)) {\n      for (const term of options.TERMS) {\n        pushTerms(args, term);\n      }\n    } else {\n      pushTerms(args, options.TERMS);\n    }\n  }\n\n  if (options?.DIALECT) {\n    args.push('DIALECT', options.DIALECT.toString());\n  }\n\n  return args;\n}\n\nexports.transformArguments = transformArguments;\n\nfunction pushTerms(args, _ref) {\n  let {\n    mode,\n    dictionary\n  } = _ref;\n  args.push('TERMS', mode, dictionary);\n}\n\nfunction transformReply(rawReply) {\n  return rawReply.map(_ref2 => {\n    let [, term, suggestions] = _ref2;\n    return {\n      term,\n      suggestions: suggestions.map(_ref3 => {\n        let [score, suggestion] = _ref3;\n        return {\n          score: Number(score),\n          suggestion\n        };\n      })\n    };\n  });\n}\n\nexports.transformReply = transformReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformReply","transformArguments","index","query","options","args","DISTANCE","push","toString","TERMS","Array","isArray","term","pushTerms","DIALECT","mode","dictionary","rawReply","map","suggestions","score","suggestion","Number"],"sources":["C:/Users/gnage/node_modules/@redis/search/dist/commands/SPELLCHECK.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = void 0;\nfunction transformArguments(index, query, options) {\n    const args = ['FT.SPELLCHECK', index, query];\n    if (options?.DISTANCE) {\n        args.push('DISTANCE', options.DISTANCE.toString());\n    }\n    if (options?.TERMS) {\n        if (Array.isArray(options.TERMS)) {\n            for (const term of options.TERMS) {\n                pushTerms(args, term);\n            }\n        }\n        else {\n            pushTerms(args, options.TERMS);\n        }\n    }\n    if (options?.DIALECT) {\n        args.push('DIALECT', options.DIALECT.toString());\n    }\n    return args;\n}\nexports.transformArguments = transformArguments;\nfunction pushTerms(args, { mode, dictionary }) {\n    args.push('TERMS', mode, dictionary);\n}\nfunction transformReply(rawReply) {\n    return rawReply.map(([, term, suggestions]) => ({\n        term,\n        suggestions: suggestions.map(([score, suggestion]) => ({\n            score: Number(score),\n            suggestion\n        }))\n    }));\n}\nexports.transformReply = transformReply;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6B,KAAK,CAA3D;;AACA,SAASA,kBAAT,CAA4BC,KAA5B,EAAmCC,KAAnC,EAA0CC,OAA1C,EAAmD;EAC/C,MAAMC,IAAI,GAAG,CAAC,eAAD,EAAkBH,KAAlB,EAAyBC,KAAzB,CAAb;;EACA,IAAIC,OAAO,EAAEE,QAAb,EAAuB;IACnBD,IAAI,CAACE,IAAL,CAAU,UAAV,EAAsBH,OAAO,CAACE,QAAR,CAAiBE,QAAjB,EAAtB;EACH;;EACD,IAAIJ,OAAO,EAAEK,KAAb,EAAoB;IAChB,IAAIC,KAAK,CAACC,OAAN,CAAcP,OAAO,CAACK,KAAtB,CAAJ,EAAkC;MAC9B,KAAK,MAAMG,IAAX,IAAmBR,OAAO,CAACK,KAA3B,EAAkC;QAC9BI,SAAS,CAACR,IAAD,EAAOO,IAAP,CAAT;MACH;IACJ,CAJD,MAKK;MACDC,SAAS,CAACR,IAAD,EAAOD,OAAO,CAACK,KAAf,CAAT;IACH;EACJ;;EACD,IAAIL,OAAO,EAAEU,OAAb,EAAsB;IAClBT,IAAI,CAACE,IAAL,CAAU,SAAV,EAAqBH,OAAO,CAACU,OAAR,CAAgBN,QAAhB,EAArB;EACH;;EACD,OAAOH,IAAP;AACH;;AACDP,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,SAASY,SAAT,CAAmBR,IAAnB,QAA+C;EAAA,IAAtB;IAAEU,IAAF;IAAQC;EAAR,CAAsB;EAC3CX,IAAI,CAACE,IAAL,CAAU,OAAV,EAAmBQ,IAAnB,EAAyBC,UAAzB;AACH;;AACD,SAAShB,cAAT,CAAwBiB,QAAxB,EAAkC;EAC9B,OAAOA,QAAQ,CAACC,GAAT,CAAa;IAAA,IAAC,GAAGN,IAAH,EAASO,WAAT,CAAD;IAAA,OAA4B;MAC5CP,IAD4C;MAE5CO,WAAW,EAAEA,WAAW,CAACD,GAAZ,CAAgB;QAAA,IAAC,CAACE,KAAD,EAAQC,UAAR,CAAD;QAAA,OAA0B;UACnDD,KAAK,EAAEE,MAAM,CAACF,KAAD,CADsC;UAEnDC;QAFmD,CAA1B;MAAA,CAAhB;IAF+B,CAA5B;EAAA,CAAb,CAAP;AAOH;;AACDvB,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}