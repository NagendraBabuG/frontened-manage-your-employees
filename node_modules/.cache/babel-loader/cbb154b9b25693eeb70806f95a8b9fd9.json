{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\n\nconst generic_transformers_1 = require(\"./generic-transformers\");\n\nconst LCS_1 = require(\"./LCS\");\n\nvar LCS_2 = require(\"./LCS\");\n\nObject.defineProperty(exports, \"FIRST_KEY_INDEX\", {\n  enumerable: true,\n  get: function () {\n    return LCS_2.FIRST_KEY_INDEX;\n  }\n});\nObject.defineProperty(exports, \"IS_READ_ONLY\", {\n  enumerable: true,\n  get: function () {\n    return LCS_2.IS_READ_ONLY;\n  }\n});\n\nfunction transformArguments(key1, key2) {\n  const args = (0, LCS_1.transformArguments)(key1, key2);\n  args.push('IDX', 'WITHMATCHLEN');\n  return args;\n}\n\nexports.transformArguments = transformArguments;\n\nfunction transformReply(reply) {\n  return {\n    matches: reply[1].map(_ref => {\n      let [key1, key2, length] = _ref;\n      return {\n        key1: (0, generic_transformers_1.transformRangeReply)(key1),\n        key2: (0, generic_transformers_1.transformRangeReply)(key2),\n        length\n      };\n    }),\n    length: reply[3]\n  };\n}\n\nexports.transformReply = transformReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformReply","transformArguments","IS_READ_ONLY","FIRST_KEY_INDEX","generic_transformers_1","require","LCS_1","LCS_2","enumerable","get","key1","key2","args","push","reply","matches","map","length","transformRangeReply"],"sources":["C:/Users/gnage/node_modules/@redis/client/dist/lib/commands/LCS_IDX_WITHMATCHLEN.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nconst generic_transformers_1 = require(\"./generic-transformers\");\nconst LCS_1 = require(\"./LCS\");\nvar LCS_2 = require(\"./LCS\");\nObject.defineProperty(exports, \"FIRST_KEY_INDEX\", { enumerable: true, get: function () { return LCS_2.FIRST_KEY_INDEX; } });\nObject.defineProperty(exports, \"IS_READ_ONLY\", { enumerable: true, get: function () { return LCS_2.IS_READ_ONLY; } });\nfunction transformArguments(key1, key2) {\n    const args = (0, LCS_1.transformArguments)(key1, key2);\n    args.push('IDX', 'WITHMATCHLEN');\n    return args;\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n    return {\n        matches: reply[1].map(([key1, key2, length]) => ({\n            key1: (0, generic_transformers_1.transformRangeReply)(key1),\n            key2: (0, generic_transformers_1.transformRangeReply)(key2),\n            length\n        })),\n        length: reply[3]\n    };\n}\nexports.transformReply = transformReply;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6BH,OAAO,CAACI,YAAR,GAAuBJ,OAAO,CAACK,eAAR,GAA0B,KAAK,CAA5G;;AACA,MAAMC,sBAAsB,GAAGC,OAAO,CAAC,wBAAD,CAAtC;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AACAT,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,iBAA/B,EAAkD;EAAEU,UAAU,EAAE,IAAd;EAAoBC,GAAG,EAAE,YAAY;IAAE,OAAOF,KAAK,CAACJ,eAAb;EAA+B;AAAtE,CAAlD;AACAP,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,cAA/B,EAA+C;EAAEU,UAAU,EAAE,IAAd;EAAoBC,GAAG,EAAE,YAAY;IAAE,OAAOF,KAAK,CAACL,YAAb;EAA4B;AAAnE,CAA/C;;AACA,SAASD,kBAAT,CAA4BS,IAA5B,EAAkCC,IAAlC,EAAwC;EACpC,MAAMC,IAAI,GAAG,CAAC,GAAGN,KAAK,CAACL,kBAAV,EAA8BS,IAA9B,EAAoCC,IAApC,CAAb;EACAC,IAAI,CAACC,IAAL,CAAU,KAAV,EAAiB,cAAjB;EACA,OAAOD,IAAP;AACH;;AACDd,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,cAAT,CAAwBc,KAAxB,EAA+B;EAC3B,OAAO;IACHC,OAAO,EAAED,KAAK,CAAC,CAAD,CAAL,CAASE,GAAT,CAAa;MAAA,IAAC,CAACN,IAAD,EAAOC,IAAP,EAAaM,MAAb,CAAD;MAAA,OAA2B;QAC7CP,IAAI,EAAE,CAAC,GAAGN,sBAAsB,CAACc,mBAA3B,EAAgDR,IAAhD,CADuC;QAE7CC,IAAI,EAAE,CAAC,GAAGP,sBAAsB,CAACc,mBAA3B,EAAgDP,IAAhD,CAFuC;QAG7CM;MAH6C,CAA3B;IAAA,CAAb,CADN;IAMHA,MAAM,EAAEH,KAAK,CAAC,CAAD;EANV,CAAP;AAQH;;AACDhB,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}